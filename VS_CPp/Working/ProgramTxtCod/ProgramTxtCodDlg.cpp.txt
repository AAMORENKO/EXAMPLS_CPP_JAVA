
// ProgramTxtCodDlg.cpp : implementation file
//

#include "stdafx.h"
#include "ProgramTxtCod.h"
#include "ProgramTxtCodDlg.h"
#include "afxdialogex.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CProgramTxtCodDlg dialog



CProgramTxtCodDlg::CProgramTxtCodDlg(CWnd* pParent /*=NULL*/)
	: CDialog(IDD_PROGRAMTXTCOD_DIALOG, pParent)
	, MS(_T("Я на уроках информатики программирую на языке Си."))
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CProgramTxtCodDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	DDX_Text(pDX, IDC_EDIT1, MS);
	DDX_Control(pDX, IDC_E, E);

	SetWindowTextW(L"Програма кодування текстів (RUS).");
	E.SetWindowTextW(L"\n\n\t\tВікно результатів кодування.\n\n\t\tНатисніть <Start>");


}

BEGIN_MESSAGE_MAP(CProgramTxtCodDlg, CDialog)
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_BUTTON1, &CProgramTxtCodDlg::OnBnClickedStart)
END_MESSAGE_MAP()


// CProgramTxtCodDlg message handlers

BOOL CProgramTxtCodDlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	// Set the icon for this dialog.  The framework does this automatically
	//  when the application's main window is not a dialog
	SetIcon(m_hIcon, TRUE);			// Set big icon
	SetIcon(m_hIcon, FALSE);		// Set small icon

	// TODO: Add extra initialization here

	return TRUE;  // return TRUE  unless you set the focus to a control
}

// If you add a minimize button to your dialog, you will need the code below
//  to draw the icon.  For MFC applications using the document/view model,
//  this is automatically done for you by the framework.

void CProgramTxtCodDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // device context for painting

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// Center icon in client rectangle
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// Draw the icon
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialog::OnPaint();
	}
}

// The system calls this function to obtain the cursor to display while the user drags
//  the minimized window.
HCURSOR CProgramTxtCodDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CProgramTxtCodDlg::OnBnClickedStart()
{
	// TODO: Add your control notification handler code here
	UpdateData(true);
	ms = MS;
	UpdateData(false);

	z = "\tФраза для кодування:\n\n\t";
	z += "\"";
	z += ms;
	z+="\"";

	z += "\n\nТаблиця кодів:\n";

	A[0] = ' '; B[0] = 0;
	A[65] = '.'; B[65] = 65;
	for (k = 1; k < 65; k++)
	{
		A[k] = wchar_t(k + 1039);
		B[k] = k;
	}

	z += "\" \"=00 ";
	for (k = 1; k < 65; k++)
	{
		if (k % 14 == 0 && k != 0)
		{
			if (k < 10)
			{
				t.Format(L"\n\"%c\"=0%i ", A[k], B[k]);
			}
			else
			{
				t.Format(L"\n\"%c\"=%i ", A[k], B[k]);
			}
		}
		else
		{
			if (k < 10)
			{
				t.Format(L"\"%c\"=0%i ", A[k], B[k]);
			}
			else
			{
				t.Format(L"\"%c\"=%i ", A[k], B[k]);
			}
		}
		z += t;
	}
	z += "\".\"=65 ";
	z += "\n\nРезультат кодування:\n";


	for (k = 0; k < ms.GetLength(); k++)
	{
		
		int cod = (wchar_t)ms[k];
		if (k % 40 == 0 && k!=0)
		{
			z += "\n";
			if (cod == 32)
			{
				cod = 0;
				t.Format(L"0%i", cod);
			}
			else if (cod == 46)
			{
				cod = 65;
				t.Format(L"%i", cod);
			}
			else if (cod != 32 && cod != 46)
			{
				cod -= 1039;
				if (cod < 10)
				{
					t.Format(L"0%i", cod);
				}
				else
				{
					t.Format(L"%i", cod);
				}
			}
			z += t;
		} else
		{
			if (cod == 32)
			{
				cod = 0;
				t.Format(L"0%i", cod);
			}
			else if (cod == 46)
			{
				cod = 65;
				t.Format(L"%i", cod);
			}
			else if (cod != 32 && cod != 46)
			{
				cod -= 1039;
				if (cod < 10)
				{
					t.Format(L"0%i", cod);
				}
				else
				{
					t.Format(L"%i", cod);
				}
			}
			z += t;
		}
	}


	E.SetWindowTextW(z);
}
