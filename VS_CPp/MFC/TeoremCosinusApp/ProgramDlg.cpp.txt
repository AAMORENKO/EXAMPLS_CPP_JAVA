
// ProgramDlg.cpp : implementation file
//

#include "pch.h"
#include "framework.h"
#include "Program.h"
#include "ProgramDlg.h"
#include "afxdialogex.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CProgramDlg dialog



CProgramDlg::CProgramDlg(CWnd* pParent /*=nullptr*/)
	: CDialog(IDD_PROGRAM_DIALOG, pParent)
	, A(8)
	, B(11)
	, C(20)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CProgramDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_E, E);
	DDX_Text(pDX, IDC_EDIT1, A);
	DDX_Text(pDX, IDC_EDIT2, B);
	DDX_Text(pDX, IDC_EDIT3, C);

	E.SetWindowTextW(L"\n\n\n\n\n\n\n\n\n       Натисніть кнопку \n       <обчислити>");

}

BEGIN_MESSAGE_MAP(CProgramDlg, CDialog)
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_BUTTON1, &CProgramDlg::OnBnClickedButton1)
END_MESSAGE_MAP()


// CProgramDlg message handlers

BOOL CProgramDlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	// Set the icon for this dialog.  The framework does this automatically
	//  when the application's main window is not a dialog
	SetIcon(m_hIcon, TRUE);			// Set big icon
	SetIcon(m_hIcon, FALSE);		// Set small icon

	// TODO: Add extra initialization here

	return TRUE;  // return TRUE  unless you set the focus to a control
}

// If you add a minimize button to your dialog, you will need the code below
//  to draw the icon.  For MFC applications using the document/view model,
//  this is automatically done for you by the framework.

void CProgramDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // device context for painting

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// Center icon in client rectangle
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// Draw the icon
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialog::OnPaint();
	}
}

// The system calls this function to obtain the cursor to display while the user drags
//  the minimized window.
HCURSOR CProgramDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CProgramDlg::OnBnClickedButton1()
{
	// TODO: Add your control notification handler code here

	UpdateData(true);
	a = A;
	b = B;
	c = C;
	UpdateData(false);

	fg = existing(a, b, c);

	ms = "Результат обчислень:\n\n";
	ms += "Вами введені\n";
	t.Format(L"a=%3.1f\n", a);
	ms += t;
	t.Format(L"b=%3.1f\n", b);
	ms += t;
	t.Format(L"c=%3.1f\n", c);
	ms += t;


	if (fg)
	{
		ms += "трикутник існує\n";

		float buf, znak;

		buf = max2(max2(a, b), c);

		if (buf == a)
		{
			znak = b * b + c * c - a * a;
			if (znak > 0)
			{
				ms += "і він - гострокутний";
			}
			if (znak == 0)
			{
				ms += "і він - прямокутний";
			}
			if (znak < 0)
			{
				ms += "і він - тупокутний";
			}
		}
		else

			if (buf == b)
			{
				znak = a * a + c * c - b * b;
				if (znak > 0)
				{
					ms += "і він - гострокутний";
				}
				if (znak == 0)
				{
					ms += "і він - прямокутний";
				}
				if (znak < 0)
				{
					ms += "і він - тупокутний";
				}
			}

			else
				if (buf == c)
				{
					znak = b * b + a * a - c * c;
					if (znak > 0)
					{
						ms += "і він - гострокутний";
					}
					if (znak == 0)
					{
						ms += "і він - прямокутний";
					}
					if (znak < 0)
					{
						ms += "і він - тупокутний";
					}
				}		
	}
	else
	{
		ms += "трикутник не існує";
	}
	E.SetWindowTextW(ms);
}

afx_msg bool  CProgramDlg::existing(float x, float y, float z)
{
	bool res = false;
	if (x > 0 && y > 0 && z > 0
		&& x + y > z && x + z > y && y + z > x) res = true;
	return res;
}

afx_msg float  CProgramDlg::max2(float x, float y)
{
	float res;
	if (x >= y) res = x; else res = y;
	return res;
}
