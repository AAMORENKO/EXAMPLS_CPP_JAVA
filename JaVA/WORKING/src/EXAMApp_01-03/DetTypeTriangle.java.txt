package DetTypeTriangle;

import java.awt.*;
import java.awt.event.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Random;
import java.util.Scanner;

public class DetTypeTriangle extends Frame implements
        WindowListener, MouseListener, MouseMotionListener {

    String mouseEvent = null;
    String mouseMoveEvent = null;
    String mouseDragEvent;
    String ctrl;
    public Point toch = null;
    public int x, y, w, h;
    final public double PI = 3.14159265359;

    public void windowOpened(WindowEvent e) {
    }

    ;

    public void windowClosing(WindowEvent e) {
        this.dispose();
    }

    ;

    public void windowClosed(WindowEvent e) {
    }

    ;

    public void windowIconified(WindowEvent e) {
    }

    ;

    public void windowDeiconified(WindowEvent e) {
    }

    ;

    public void windowActivated(WindowEvent e) {
    }

    ;

    public void windowDeactivated(WindowEvent e) {
    }

    ;

    public void mouseClicked(MouseEvent e) {
    }

    ;

    public void mousePressed(MouseEvent e) {
    }

    ;

    public void mouseReleased(MouseEvent e) {
    }

    ;

    public void mouseEntered(MouseEvent e) {
    }

    ;

    public void mouseExited(MouseEvent e) {
    }

    ;

    public void mouseDragged(MouseEvent e) {
    }

    ;

    public void mouseMoved(MouseEvent e) {
    }

    ;

    public String ms,text,res;
    public int hh;
    public int [] TAB= new int[3*hh+100];
    public int a,b,c;
    public boolean fg=false;

    public void paint(Graphics g) {
        Dimension rc = getSize();
        Insets in = getInsets();

        int RH = rc.width;
        int RW = rc.height;

        int minX = in.left;
        int maxX = RH - in.right;
        int minY = in.top;
        int maxY = RW - in.bottom;

        int cx, cy, dx, dy;

        int x1, y1, x2, y2, x3, y3;

        Graphics2D g2 = (Graphics2D) g;
        g2.setStroke(new BasicStroke(1.0f));

        cx = Math.abs(maxX - minX) / 2;
        cy = Math.abs(maxY - minY) / 2 + 50;
        dx = 40;
        dy = 20;

        // TODO THIS PAINT
        x=15; y=65; dy=dx=30;
        String text = "";
        String ms = "Дана таблиця із сторонами трикутників:";
        g.setFont(new Font("Trebuchet Ms", Font.BOLD, 24));
        g.setColor(new Color(35, 67, 221));
        g.drawString(ms, x, y);
        File inf = new File("data5.txt");
        BufferedReader reader = null;
        try {
            Scanner scan = new Scanner(inf);
            hh=scan.nextInt();
            g.setFont(new Font("Trebuchet Ms", Font.BOLD, 22));
            g.setColor(new Color(154, 11, 221));
            int k=1;
            for (int i = 1; i <3*hh+1 ; i+=3) {
                a=TAB[i]=scan.nextInt();
                ms=k+") a="+TAB[i];
                b=TAB[i+1]=scan.nextInt();
                ms+="; b= "+TAB[i+1];
                c=TAB[i+2]=scan.nextInt();
                ms+="; c= "+TAB[i+2];

                if((a+b>c) && (a+c>b) && (b+c>a)){
                    ms+=" -  існує";
                    fg=true;
                } else
                {
                    ms+=" -  не існує";
                    fg=false;
                }

                if(fg)
                {
                    if(a==b && b==c){
                        ms+=" - рівносторонній";
                    } else
                    if(a==b || b==c || a==c){
                        ms+=" - рівнобедрений";
                    }else
                    if(a!=b && b!=c && a!=c)
                    {
                        ms+=" - різносторонній";
                    }

                }

                g.drawString(ms, x, y+10+k*24);
                k++;
            }
            scan.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        g.setColor(new Color(40, 133, 15));




    }

    MouseAdapter mouseHandler= new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            super.mouseClicked(e);
            toch=e.getPoint();
            repaint();
        }
        @Override
        public void mouseMoved(MouseEvent e) {
            toch=e.getPoint();
        }
    };

    public DetTypeTriangle() {
        super("Визначаємо тип трикутника за його сторонами.");
        addWindowListener(this);

        addMouseMotionListener(mouseHandler);
        addMouseListener(mouseHandler);

        setLayout(null);
        setLocation(220, 20);
        setSize(800, 500);
        show();
        this.setResizable(false);
    }



}