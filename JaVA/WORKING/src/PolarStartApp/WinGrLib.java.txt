package WinGrLib;


import java.awt.*;
import java.awt.event.*;
import java.util.Random;

public class WinGrLib extends Frame implements WindowListener, MouseListener, MouseMotionListener {

    String mouseEvent=null;
    String mouseMoveEvent=null;
    String mouseDragEvent;
    String ctrl;
    public Point toch=null;
    public int x,y,w,h;

    public void windowOpened(WindowEvent e) {  };
    public void windowClosing(WindowEvent e) {
        dispose();
        System.exit(0);
    } ;
    public void windowClosed(WindowEvent e) {   };
    public void windowIconified(WindowEvent e) {   };
    public void windowDeiconified(WindowEvent e) {   };
    public void windowActivated(WindowEvent e) {   };
    public void windowDeactivated(WindowEvent e) {   };
    public void mouseClicked(MouseEvent e) {    };
    public void mousePressed(MouseEvent e) {   };
    public void mouseReleased(MouseEvent e) {   };
    public void mouseEntered(MouseEvent e) {   };
    public void mouseExited(MouseEvent e) {   };
    public void mouseDragged(MouseEvent e) {   };
    public void mouseMoved(MouseEvent e) {   };


    public void paint(Graphics g) {
        Dimension rc = getSize();
        Insets in = getInsets();

        int RH = rc.width;
        int RW = rc.height;

        int minX = in.left;
        int maxX = RH - in.right;
        int minY = in.top;
        int maxY = RW - in.bottom;

        int cx, cy, dx, dy;

        int x1, y1, x2, y2,x3,y3;

        Graphics2D g2 = (Graphics2D) g;
        g2.setStroke(new BasicStroke(1.0f));

        cx = Math.abs(maxX - minX) / 2;
        cy = Math.abs(maxY - minY) / 2+50;
        dx = 40;
        dy = 20;

        // TODO THIS PAINT
        float wdk=2.5f;
        g2.setStroke(new BasicStroke(wdk));
        g2.setColor(new Color(0,0,0));
        int [][] knp=new int[8][2];
        x1=minX+20; y1=minY+20;
        knp[0][0]=x1; knp[0][1]=y1;
        g2.drawRect(x1,y1,dx,dy);
        x1=minX+80; y1=minY+20;
        knp[1][0]=x1; knp[1][1]=y1;
        g2.drawRect(x1,y1,dx,dy);
        x1=minX+140; y1=minY+20;
        knp[2][0]=x1; knp[2][1]=y1;
        g2.drawRect(x1,y1,dx,dy);
        double r,f,sna,csa;
        int a,k;
        if(toch!=null){
            x=toch.x;
            y=toch.y;
            if(x>knp[0][0] && x<knp[0][0]+dx && y>knp[0][1] && y<knp[0][1]+dy){
                a=350;
                k=128;
                r=225.0f;
                f=0.1f;
                do{
                    r=a*Math.sin(k*f);
                    sna=Math.sin(f);
                    csa=Math.cos(f);
                    x2= (int) (r*csa);
                    y2= (int) (r*sna);
                    g2.setColor(new Color(rnd(1,255),rnd(1,255),rnd(1,255)));
                    g2.drawLine(cx,cy,cx+x2,cy+y2);
                    f+=0.15f;
                }while(f<=360.0f);
            }
            if(x>knp[1][0] && x<knp[1][0]+dx && y>knp[1][1] && y<knp[1][1]+dy){
                r=0;
                f=0.1f;
                do{
                    r+=0.35f;
                    sna=Math.sin(f);
                    csa=Math.cos(f);
                    x2= (int) (r*sna);
                    y2= (int) (r*csa);
                    //g2.setColor(new Color(rnd(1,255),rnd(1,255),rnd(1,255)));
                    g2.setColor(new Color(41, 177, 25));
                    g2.drawLine(cx,cy,cx+x2,cy+y2);
                    f+=0.3f;
                }while(f<=360.0f);
            }
            if(x>knp[2][0] && x<knp[2][0]+dx && y>knp[2][1] && y<knp[2][1]+dy){
                g2.setColor(new Color(118, 4, 228));
                r=350.0f;
                f=0;
                do{
                    sna=Math.sin(f);
                    csa=Math.cos(f);
                    x2= (int) (r*csa);
                    y2= (int) (r*sna);
                    g2.drawLine(cx,cy,cx+x2,cy+y2);
                    f+=0.08f;
                }while(f<=360.0f);
            }
        }
    }
    private static int rnd(int min, int max) {
        return (new Random()).ints(min,max).iterator().nextInt();
    }

    MouseAdapter mouseHandler= new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            super.mouseClicked(e);
            toch=e.getPoint();
            repaint();
        }
        @Override
        public void mouseMoved(MouseEvent e) {
            toch=e.getPoint();
        }
    };

    public WinGrLib() {
        super("Полярна система координат. Малюнки.");
        addWindowListener(this);

        addMouseMotionListener(mouseHandler);
        addMouseListener(mouseHandler);

        setLayout(null);
        setLocation(120, 100);
        setSize(1024, 600);
        show();
    }


}