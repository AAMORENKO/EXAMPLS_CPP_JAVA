package Kratnist;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Random;

import static java.lang.Thread.sleep;
import static javax.swing.JFrame.EXIT_ON_CLOSE;

public class Kratnist extends Frame implements WindowListener{
    @Override
    public void windowOpened(WindowEvent e) {

    }

    @Override
    public void windowClosing(WindowEvent e) {
        this.dispose();
    }

    @Override
    public void windowClosed(WindowEvent e) {

    }

    @Override
    public void windowIconified(WindowEvent e) {

    }

    @Override
    public void windowDeiconified(WindowEvent e) {

    }

    @Override
    public void windowActivated(WindowEvent e) {

    }

    @Override
    public void windowDeactivated(WindowEvent e) {

    }

    JTextField input = new JTextField();
    String ms="";
    String t="";
    JButton button=new JButton("Перевірити");


    public void paint(Graphics g) {

        Dimension rc = getSize();
        Insets in = getInsets();

        int RH = rc.width;
        int RW = rc.height;

        int minX = in.left;
        int maxX = RH - in.right;
        int minY = in.top;
        int maxY = RW - in.bottom;

        int cx, cy, dx, dy;
        float wdk=3.0f;

        cx = Math.abs(maxX - minX) / 2;
        cy = Math.abs(maxY - minY) / 2;

        dx = Math.abs(maxX-minX) / 7;
        dy = Math.abs(maxY-minY) / 7;



        Graphics2D g2 = (Graphics2D) g;
        g2.setStroke(new BasicStroke(wdk));


        // TO DO
        final double pi=3.1415926535897932384626433832795;

        Color[] c=new Color[8];

        c[0] = new Color(0x000000FF);
        c[1] = new Color(0x0000A5FF);
        c[2] = new Color(0x0000DDFF);
        c[3] = new Color(0x00008000);
        c[4] = new Color(0x00FFFF00);
        c[5] = new Color(0x00FF0000);
        c[6] = new Color(0x00D30094);
        c[7] = new Color(0xFFFFFF);

        int k=0;


/*
        for (k = 0; k <7 ; k++)
        {
            for (int i= 0; i <7 ; i++)
            {
                int wleft = in.left + i * dx;
                int wtop = in.top + k * dy;
                g.setColor(c[k]);
                g.fillRect(wleft, wtop, dx, dy);
                g.setColor(c[7]);
                g.drawRect(wleft, wtop, dx, dy);
            }
        }
*/

        Image umova=new ImageIcon("res\\sshot-1.png").getImage();
        g.drawImage(umova,1,25,null);

        String text="Введіть для перевірки число n=";

        g.setColor(new Color(0,0,0));
        g.setFont(new Font("Times New Roman",Font.PLAIN,22));
        g.drawString(text,15,160);

        Image mbutton=new ImageIcon("res\\button1.png").getImage();
        g.drawImage(mbutton,405,140,null);

        button.setBounds(405,140,100,30);
        input.setBounds(315,140,60,30);
        Font fnt=new Font("Times New Roman",Font.PLAIN,22);
        input.setFont(fnt);

        this.setLayout(null);
        this.add(input);
        this.add(button);
        this.setVisible(true);
        input.setText("9");

        //int sum=gaus(100);
        //System.out.println(sum);

        button.addActionListener(new ButtonListEvent());

    }

    private int gaus(int m) {
        if(m==0) return 0;
        return m+=gaus(m-1);
    }


    private static int rnd(int min, int max) {
        return (new Random()).ints(min,max).iterator().nextInt();
    }

    public Kratnist() {
        super("Доведення кратності виразів.");
        addWindowListener(this);
        setLayout(null);
        setLocation(120,100);
        setSize(800,600);
        show();
        this.setResizable(false);
    }

    private class ButtonListEvent implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            int n;
            n= Integer.parseInt(input.getText());

            //FontMetrics fm=getGraphics().getFontMetrics();
            //int BASE=160;
            //int OFFSET=220; //fm.getHeight();
            //getGraphics().setFont(new Font("Times New Roman",Font.PLAIN,22));



            for (int i = 1; i <=n ; i++) {
                ms=("якщо n="+i+", тоді вираз: ");
                int m=(int)Math.pow(9,i)-8*i-1;
                int q=m/16;
                ms+=(m+" = 16*"+q+"\n");
                getGraphics().drawString(ms,15,180+i*22);
            }



        }
    }
}

/*
http://javatutor.net/articles/changing-fontsize-using-fontmetrics
https://overcoder.net/q/1117962/java--изменение-шрифтов-пользовательского-интерфейса-nimbus-не-работает
*/